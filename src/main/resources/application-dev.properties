# Application
spring.application.name=spring-security-jwt-demo
# Datasource
spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB:db_authdemo}
spring.datasource.username=${MYSQL_USER:root}
spring.datasource.password=${MYSQL_PASSWORD:password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
# Swagger
springdoc.swagger-ui.path=/swagger-ui.html
# Swagger API
api.version=v1.0.0
api.description=The APIs are used to provide authentication and authorization mechanism with Spring Security 6. 
api.server.url=http://localhost:8080
# JWT Public and Private Key
app.token.rsa.private-key=classpath:certs/private-key.pem
app.token.rsa.public-key=classpath:certs/public-key.pem
# Token Configuration
app.token.expiration=900000
app.token.refresh.duration=2592000000
app.token.email.verification.duration=3600000
app.token.password.reset.duration=3600000
# Log
logging.level.org.springframework=INFO
# Mail Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USER:your-email@example.com}
spring.mail.password=${MAIL_PASSWORD:your-email-password}
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.debug=true
# URL
app.mail.confirm=http://localhost:8080/api/v1/auth/confirm
## TODO: The request should send to the below link as method type of POST
## Thus the link will able to be replaced with frontend link instead of backend
app.mail.password.resetlink=http://localhost:8080/api/v1/auth/password/reset

